{"version":3,"sources":["script.js"],"names":["gameOverForm","timer","startButton","document","getElementById","timerValue","timerInterval","text","choices","correctChoice","currentQuestionIndex","startTimer","displayQuestion","setInterval","endGame","textContent","questionElement","question","forEach","button","addEventListener","createElement","questionsContainer","appendChild","selectAnswer","choice","selectedChoice","correct","event","target","questions","displayMessage","length","clearInterval","message","display","messageElement","saveScore","preventDefault","initials","style","score","localStorage","setItem","stringify","scores","JSON","parse","getItem","push","window","location","href","startGame"],"mappings":"aAAA,IAGMA,MAEFC,cAkBJD,qBAvBME,YAAcC,SAASC,eAAe,gBACtCC,WAAaF,SAASC,eAAe,eADrCF,mBAAuBE,SAAAA,eAAe,aACtCC,aAAaF,SAASC,eAAe,aAKvCE,UAAAA,CACJ,CAEIC,KAAM,uCACNC,QAAU,CAAA,QAAS,QAAS,QAC5BC,cAAe,SAGfF,CACAC,KAAO,mCACPC,QAAAA,CAAAA,MAAe,QAAA,QAEjBA,cAAA,QAUAC,SAAAA,YAGAC,MAAAA,GACAC,qBAAe,EAGjBD,aACEC,kBAGEP,SAAAA,aAGAC,cAAAO,YAAgB,WACdC,SACDT,WAAAU,YAAAd,QAFY,GAMjBa,WAHK,KAUH,SAAME,kBACNA,IAAAA,EAAgBD,UAAhBL,sBAIAO,mBAAiBC,UAAQ,GAGvBC,IAAAA,EAAOC,SAAPC,cAAA,KACAC,EAAAA,YAAmBC,EAAnBhB,KACDe,mBALDC,YAAAP,GAQFC,EAASO,QAAAA,QAAT,SAAAC,GACE,IAAMC,EAAAA,SAAsBL,cAAQN,UACpCI,EAAMQ,YAAmBF,EAPvBN,EAAOC,iBAAiB,QAASI,cASnCF,mBAAaC,YAAAJ,KAIXlB,SAAKuB,aAAQI,GACd,IAEDF,EAAAE,EAAAC,OAAAd,YATgBe,UAAUpB,sBAAsBD,gBAAkBiB,EAGhEK,eAAe,aASfA,eAAA,cACAjB,OAAO,MAIRJ,uBACFoB,UAAAE,OAEDlB,UAGEQ,kBAIAW,SAAAA,eAAc3B,GACdD,IAAAA,EAAAF,SAAAkB,cAAA,KACAU,EAAehB,YAAfmB,EACAlC,mBAAmBmC,YAAUC,GAG/B,SAASC,UACPT,cAAMU,eAENjC,WAAMkC,YAAWvC,IACjB+B,eAAc9B,cAPdD,aAAawC,MAAML,QAAU,QAWfI,SAAAA,UAAAA,GAAUE,EAAAA,iBACxBC,IAAAA,EAAaC,aAAbJ,SAAoCK,MAL9BH,EAAQxC,MAGR4C,EAASC,KAAKC,MAAML,aAAaM,QAAQ,YAAc,GAC7DH,EAAOI,KAAK,CAAEV,SAAAA,EAAUE,MAAAA,IACxBC,aAAaC,QAAQ,SAAUG,KAAKF,UAAUC,IAG9CK,OAAOC,SAASC,KAAO,mBA1FzBlD,YAASmD,iBAAY,QAAAA,WACnBrD,aAAAoB,iBAAA,SAAAiB","file":"script.min.js","sourcesContent":["const startButton = document.getElementById(\"start-button\");\r\nconst timerValue = document.getElementById(\"timer-value\");\r\nconst questionsContainer = document.getElementById(\"questions\");\r\nconst gameOverForm = document.getElementById(\"game-over\");\r\n\r\nlet timer;\r\nlet timerInterval;\r\nlet questions = [\r\n  {\r\n    text: \"how many evolutions does eevee have?\",\r\n    choices: [\"three\", \"eight\", \"five\"],\r\n    correctChoice: \"eight\",\r\n  },\r\n  {\r\n    text: \"what gen did skarmory come from?\",\r\n    choices: [\"two\", \"three\", \"four\"],\r\n    correctChoice: \"two\",\r\n  },\r\n  // Add more questions here\r\n];\r\nlet currentQuestionIndex;\r\n\r\nstartButton.addEventListener(\"click\", startGame);\r\ngameOverForm.addEventListener(\"submit\", saveScore);\r\n\r\nfunction startGame() {\r\n  // Initialize game variables\r\n  timer = 60;\r\n  currentQuestionIndex = 0;\r\n\r\n  // Start timer and display first question\r\n  startTimer();\r\n  displayQuestion();\r\n}\r\n\r\nfunction startTimer() {\r\n  // Update timer every second\r\n  timerInterval = setInterval(() => {\r\n    timer--;\r\n    timerValue.textContent = timer;\r\n\r\n    // End game if timer reaches 0\r\n    if (timer <= 0) {\r\n      endGame();\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nfunction displayQuestion() {\r\n  const question = questions[currentQuestionIndex];\r\n\r\n  // Clear any existing content in the questions container\r\n  questionsContainer.innerHTML = \"\";\r\n\r\n  // Add the question text\r\n  const questionElement = document.createElement(\"p\");\r\n  questionElement.textContent = question.text;\r\n  questionsContainer.appendChild(questionElement);\r\n\r\n  // Add the answer choices\r\n  question.choices.forEach((choice) => {\r\n    const button = document.createElement(\"button\");\r\n    button.textContent = choice;\r\n    button.addEventListener(\"click\", selectAnswer);\r\n    questionsContainer.appendChild(button);\r\n  });\r\n}\r\n\r\nfunction selectAnswer(event) {\r\n  const selectedChoice = event.target.textContent;\r\n  const correct = questions[currentQuestionIndex].correctChoice === selectedChoice;\r\n\r\n  if (correct) {\r\n    displayMessage(\"Correct!\");\r\n  } else {\r\n    displayMessage(\"Incorrect!\");\r\n    timer -= 15; // Subtract time for incorrect answer\r\n  }\r\n\r\n  // Move on to the next question\r\n  currentQuestionIndex++;\r\n  if (currentQuestionIndex === questions.length) {\r\n    // End game if there are no more questions\r\n    endGame();\r\n  } else {\r\n    // Otherwise, display the next question\r\n    displayQuestion();\r\n  }\r\n}\r\n\r\nfunction displayMessage(message) {\r\n  const messageElement = document.createElement(\"p\");\r\n  messageElement.textContent = message;\r\n  questionsContainer.appendChild(messageElement);\r\n}\r\n\r\nfunction endGame() {\r\n  clearInterval(timerInterval);\r\n  timerValue.textContent = \"0\";\r\n  displayMessage(\"Game Over!\");\r\n  gameOverForm.style.display = \"block\";\r\n}\r\n\r\nfunction saveScore(event) {\r\n  event.preventDefault();\r\n\r\n  const initials = gameOverForm.initials.value;\r\n  const score = timer;\r\n\r\n  // Save the score to local storage\r\n  const scores = JSON.parse(localStorage.getItem(\"scores\")) || [];\r\n  scores.push({ initials, score });\r\n  localStorage.setItem(\"scores\", JSON.stringify(scores));\r\n\r\n  // Redirect to the high scores page\r\n  window.location.href = \"high-scores.html\";\r\n}\r\n"]}